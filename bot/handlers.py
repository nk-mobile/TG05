# bot/handlers.py
from aiogram import Router, F
from aiogram.types import Message
from aiogram.filters import Command
from bot.api import get_all_dog_breeds, get_breed_info, get_image_by_breed_id

router = Router()


@router.message(Command("start"))
async def cmd_start(message: Message):
    await message.answer(
        "üê∂ –ü—Ä–∏–≤–µ—Ç! –ù–∞–ø–∏—à–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–æ—Ä–æ–¥—ã —Å–æ–±–∞–∫–∏, –∏ —è –ø—Ä–∏—à–ª—é —Ç–µ–±–µ –µ—ë —Ñ–æ—Ç–æ –∏ –æ–ø–∏—Å–∞–Ω–∏–µ.\n"
        "–ò—Å–ø–æ–ª—å–∑—É–π /list, —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –ø–æ—Ä–æ–¥—ã."
    )


@router.message(Command("list"))
async def cmd_list(message: Message):
    breeds = await get_all_dog_breeds()
    if not breeds:
        await message.answer("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å–ø–∏—Å–æ–∫ –ø–æ—Ä–æ–¥. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
        return

    # –ò–∑–≤–ª–µ–∫–∞–µ–º –∏ —Å–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–∞–∑–≤–∞–Ω–∏—è –ø–æ—Ä–æ–¥
    breed_names = sorted([breed["name"] for breed in breeds])

    # –†–∞–∑–±–∏–≤–∞–µ–º –Ω–∞ —á–∞—Å—Ç–∏, –µ—Å–ª–∏ —Å–ø–∏—Å–æ–∫ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω—ã–π (–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ Telegram ‚Äî 4096 —Å–∏–º–≤–æ–ª–æ–≤)
    chunk_size = 100  # ~100 –ø–æ—Ä–æ–¥ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ
    for i in range(0, len(breed_names), chunk_size):
        chunk = breed_names[i:i + chunk_size]
        text = "üìã –°–ø–∏—Å–æ–∫ –ø–æ—Ä–æ–¥ —Å–æ–±–∞–∫:\n\n" + "\n".join(chunk)
        await message.answer(text)

@router.message(F.text)
async def send_dog_info(message: Message):
    breed_name = message.text.strip()

    # –ò—â–µ–º –ø–æ—Ä–æ–¥—É
    breed_info = await get_breed_info(breed_name)
    if not breed_info:
        await message.answer("‚ùå –ü–æ—Ä–æ–¥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –ü—Ä–æ–≤–µ—Ä—å –Ω–∞–∑–≤–∞–Ω–∏–µ –∏ –ø–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑.")
        return

    # –ü–æ–ª—É—á–∞–µ–º —Ñ–æ—Ç–æ
    image_url = await get_image_by_breed_id(breed_info["id"])
    if not image_url:
        await message.answer("üñº –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –Ω–µ—Ç —Ñ–æ—Ç–æ –¥–ª—è —ç—Ç–æ–π –ø–æ—Ä–æ–¥—ã.")

    # –§–æ—Ä–º–∏—Ä—É–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ
    info = (
        f"üêæ *{breed_info['name']}*\n\n"
        f"üìù *–û–ø–∏—Å–∞–Ω–∏–µ:* {breed_info.get('temperament', '–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö')}\n\n"
        f"üìè *–í–µ—Å:* {breed_info.get('weight', {}).get('imperial', '–ù–µ —É–∫–∞–∑–∞–Ω')} —Ñ—É–Ω—Ç–æ–≤\n"
        f"üåç *–ü—Ä–æ–∏—Å—Ö–æ–∂–¥–µ–Ω–∏–µ:* {breed_info.get('origin', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}\n"
        f"üïí *–ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∂–∏–∑–Ω–∏:* {breed_info.get('life_span', '–ù–µ —É–∫–∞–∑–∞–Ω–∞')}"
    )

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º
    if image_url:
        await message.answer_photo(photo=image_url, caption=info, parse_mode="Markdown")
    else:
        await message.answer(info, parse_mode="Markdown")